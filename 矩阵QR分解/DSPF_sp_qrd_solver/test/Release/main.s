	.file	"main.c"
	.section	.const,"a",@progbits
.LC0:
	.string	"%s = ["
.LC1:
	.string	"%f, "
.LC2:
	.string	"]"
	.section	.text.printMatrix,"ax",@progbits
	.align	2
	.global	printMatrix
	.type	printMatrix, @function
printMatrix:
		SMOVIL		-96, R6
		SMOVIL		-1, R7
		SADDA.M2		R7:R6,AR15,AR15
		SMVAGA36.M1		R11:R10, OR11
	|	SMOVIL.L		.LC0, R42
		SSTDW		R63:R62, *+AR15[11]
		SSTDW		R31:R30, *+AR15[5]
		SMOVIH.L		.LC0, R42
	|	SMVAAGL.M2		OR11, R31:R30
		SMOVIH4.L		.LC0, R43
		SSTDW		R13:R12, *+AR15[2]
	|	SMVAAGH.M2		OR11, R31:R30
		SSTDW		R43:R42, *+AR15[1]
		SNOP		2
		SSTDW		R41:R40, *+AR15[10]
		SSTDW		R39:R38, *+AR15[9]
		SBR		printf
	|	SMOV.M2		R14, R41
	|	SMOV.M1		R30, R38
		SMOV.M2		R31, R39
	|	SMOVIL		.L14, R62
		SSTDW		R37:R36, *+AR15[8]
	|	SMOVIH		.L14, R62
		SSTDW		R33:R32, *+AR15[6]
	|	SMOVIH4.L		.L14, R63
		SMOV.M2		R16, R32
	|	SMOVIL		0, R36
		SMOVIH4.L		.LC1, R33
	;; call to printf occurs, with return value
		SSTDW		R35:R34, *+AR15[7]
.L14:
		SMOVIL		0, R42
	|	SADD.M2		-1,R32,R43
		SLT		R42, R41, R0
	[!R0]	SBR		.L2
	|	SSHFLL		1, R43, R45
		SSHFLL		2, R43, R1
		SLTU		R45, R43, R3
	|	SADD.M2		4,R1,R37
		SLTU		R1, R45, R10
		SSHFLL		1, R3, R12
		SSHFLL		1, R41, R44
	|	SADD.M2		R12,R10,R14
		SSHFAR		31, R41, R46
	;; condjump to .L2 occurs
		SLTU		R37, R1, R16
		SSHFLL		2, R41, R9
	|	SADD.M2		R14,R16,R17
		SLT		R36, R32, R18
	|	SSTW		R9, *+AR15[7]
		SLTU		R44, R41, R47
	|	SSTW		R17, *+AR15[9]
		SSHFLL		1, R46, R2
		SADD.M2		R2,R47,R8
	|	SLTU		R9, R44, R13
		SSTW		R18, *+AR15[8]
	|	SSHFLL		1, R8, R15
		SMOVIL.L		.LC1, R32
	|	SADD.M2		R15,R13,R40
		SMOVIH.L		.LC1, R32
.L3:
		SLDW		*+AR15[8], R0
	|	SADD.M2		R38,R37,R34
	|	SMOV.M1		R38, R30
		SLTU		R34, R37, R35
	|	SMOV.M2		R39, R31
		SNOP		4
	[!R0]	SBR		.L5
		SNOP		6
	;; condjump to .L5 occurs
		SLDW		*+AR15[9], R11
		SNOP		5
		SADD.M2		R39,R11,R20
		SADD.M2		R20,R35,R35
.L4:
		SMVAGA36.M2		R31:R30, AR10
	|	SADD.M1		4,R30,R21
		SLTU		R21, R30, R22
	|	SMOV.M1		R21, R30
		SLDW		*AR10, R24
	|	SADD.M2		R31,R22,R31
		SSTDW		R33:R32, *+AR15[1]
		SNOP		2
		SBR		printf
		SMOVIL		.L15, R62
		SFSPDP32T.M2		R24, R27:R26
	|	SMOVIH		.L15, R62
		SMOVIH4.L		.L15, R63
		SSTDW		R27:R26, *+AR15[2]
	;; call to printf occurs, with return value
		SNOP		2
.L15:
		SEQ		R30, R34, R1
	[R1]	SEQ		R31, R35, R1
	[!R1]	SBR		.L4
		SNOP		6
	;; condjump to .L4 occurs
.L5:
		SADD.M2		1,R36,R36
	|	SLDW		*+AR15[7], R25
	|	SADD.M1		R39,R40,R29
		SEQ		R41, R36, R2
	[!R2]	SBR		.L3
		SNOP		3
		SADD.M2		R38,R25,R27
		SLTU		R27, R38, R28
	|	SMOV.M2		R27, R38
		SADD.M2		R29,R28,R39
	;; condjump to .L3 occurs
.L2:
		SMOVIL		96, R6
	|	SLDDW		*+AR15[5], R31:R30
		SMOVIL		0, R7
	|	SLDDW		*+AR15[6], R33:R32
		SLDDW		*+AR15[7], R35:R34
	|	SMOVIL.L		.LC2, R10
		SLDDW		*+AR15[8], R37:R36
	|	SMOVIH.L		.LC2, R10
		SLDDW		*+AR15[9], R39:R38
	|	SMOVIH4.L		.LC2, R11
		SNOP		5
		SBR		puts
	|	SLDDW		*+AR15[10], R41:R40
		SLDDW		*+AR15[11], R63:R62
	|	SADDA.M2		R7:R6,AR15,AR15
	;; sibcall to puts occurs
		SNOP		5
	.size	printMatrix, .-printMatrix
	.section	.text.timeCaculate,"ax",@progbits
	.align	2
	.global	timeCaculate
	.type	timeCaculate, @function
timeCaculate:
		SBR		R62
	|	SFINTSU32.M2		R10,R10
		SNOP		6
	;; return occurs
	.size	timeCaculate, .-timeCaculate
	.section	.const,"a",@progbits
.LC3:
	.string	"QR decomposition failed!"
.LC4:
	.string	"natural decomposition fails error=%e\n"
.LC5:
	.string	"solver failed!"
.LC6:
	.string	"natural A*x is not equal to b! error=%e\n"
.LC7:
	.string	"Successful"
.LC8:
	.string	"\torder=%2dx%2d, \tqr: %lf, \tslover: %lf, \tinverse: %lf, \n"
.LC9:
	.string	"vector Result Failure\n"
	.section	.text.testQr,"ax",@progbits
	.align	2
	.global	testQr
	.type	testQr, @function
testQr:
		SMOVIL		-216, R6
		SMOVIL		-1, R7
		SADDA.M2		R7:R6,AR15,AR15
		SMVAAGL.M1		AR14, R7:R6
	|	SMVAGA36.M2		R11:R10, OR12
	|	SMOVIL		0, R10
		SLDDW		*+AR15[30], R1:R0
	|	SMVAGA36.M1		R27:R26, OR11
		SMVAAGH.M1		AR14, R7:R6
	|	SLDDW		*+AR15[28], R43:R42
	|	SMVAGA36.M2		R17:R16, AR14
		SSTDW		R63:R62, *+AR15[25]
		SLDDW		*+AR15[29], R47:R46
		SNOP		3
		SSTDW		R7:R6, *+AR15[26]
		SMVAAGL.M2		OR9, R7:R6
		SNOP		1
		SMVAAGH.M2		OR9, R7:R6
	|	SSTDW		R31:R30, *+AR15[15]
		SMVAAGL.M1		OR12, R31:R30
	|	SSTDW		R33:R32, *+AR15[16]
		SMVAAGL.M1		OR11, R33:R32
	|	SMVAGA36.M2		R43:R42, OR9
		SMVAAGH.M1		OR12, R31:R30
		SSTDW		R7:R6, *+AR15[24]
		SMVAAGL.M1		OR8, R7:R6
	|	SMVAAGH.M2		OR11, R33:R32
	|	SSTDW		R13:R12, *+AR15[10]
		SNOP		1
		SMVAAGH.M1		OR8, R7:R6
	|	SMVAGA36.M2		R21:R20, OR8
		SSTDW		R37:R36, *+AR15[18]
		SSTDW		R7:R6, *+AR15[23]
		SMVAAGL.M2		AR9, R7:R6
	|	SMOV.M1		R24, R36
		SNOP		1
		SMVAAGH.M1		AR9, R7:R6
	|	SMVAGA36.M2		R1:R0, AR9
	|	SSTDW		R35:R34, *+AR15[17]
		SSTDW		R47:R46, *+AR15[14]
		SMOV.M2		R22, R35
		SNOP		1
		SSTDW		R7:R6, *+AR15[22]
		SBR		GetTimerCount
	|	SSTDW		R41:R40, *+AR15[20]
		SMVAAGL.M2		AR8, R7:R6
	|	SMOVIL		.L92, R62
		SMOVIH		.L92, R62
		SMVAAGH.M1		AR8, R7:R6
	|	SMVAGA36.M2		R19:R18, AR8
	|	SSTDW		R39:R38, *+AR15[19]
	|	SMOVIH4.L		.L92, R63
		SNOP		2
	;; call to GetTimerCount occurs, with return value
		SSTDW		R7:R6, *+AR15[21]
.L92:
		SMVAGA36.M1		R33:R32, OR13
	|	SMVAAGL.M2		AR14, R15:R14
	|	SMVCGC.L		R31:R30, BRReg
	|	SSTW		R10, *+AR15[26]
		SMVAAGL.M1		AR8, R17:R16
	|	SMVAAGL.M2		OR8, R19:R18
		SBR		R31:R30
	|	SMVAAGL.M1		OR13, R21:R20
	|	SMVAAGH.M2		AR14, R15:R14
		SMVAAGH.M1		AR8, R17:R16
	|	SMVAAGH.M2		OR8, R19:R18
	|	SMOVIL		.L93, R62
		SMVAAGH.M1		OR13, R21:R20
	|	SMOVIH		.L93, R62
		SMOV.M2		R36, R12
	|	SMOVIH4.L		.L93, R63
		SMOV.M2		R35, R10
	;; indirect call occurs, with return value
		SNOP		2
.L93:
		SBR		GetTimerCount
	|	SMOV.M2		R10, R31
	|	SMOVIL		0, R10
		SMOVIL		.L94, R62
		SMOVIH		.L94, R62
		SMOVIH4.L		.L94, R63
	;; call to GetTimerCount occurs, with return value
		SNOP		3
.L94:
		SMOVIL		-1, R1
	|	SSTW		R10, *+AR15[27]
		SMOVIL		0, R3
		SEQ		R1, R31, R2
		SLT		R3, R35, R0
	|[R2]	SBR		.L81
		SNOP		6
	;; condjump to .L81 occurs
	[!R0]	SBR		.L19
	|	SSTW		R0, *+AR15[24]
		SNOP		6
	;; condjump to .L19 occurs
.L86:
		SADD.M1		-1,R35,R9
	|	SMVAAGL.M2		AR8, R11:R10
	|	SSHFLL		1, R35, R44
		SSHFLL		2, R9, R47
	|	SMVAAA.M1		AR14, OR0
		SSTW		R47, *+AR15[22]
	|	SMVAAGH.M1		AR8, R11:R10
	|	SSHFLL		1, R9, R45
		SADDA.M1		-4,OR0,AR0
	|	SLTU		R45, R9, R19
		SSHFLL		1, R36, R43
		SLDW		*+AR15[22], R21
	|	SSHFAR		31, R36, R48
		SSTDW		R11:R10, *+AR15[9]
	|	SSHFLL		1, R19, R23
	|	SMVAAGL.M2		AR0, R31:R30
		SLDW		*+AR15[22], R49
	|	SSHFAR		31, R35, R11
		SLTU		R43, R36, R16
	|	SMVAAGH.M2		AR0, R31:R30
		SLDW		*+AR15[18], R13
	|	SLTU		R44, R35, R12
		SSHFLL		1, R11, R15
		SLDW		*+AR15[19], R14
	|	SLTU		R21, R45, R22
	|	SADD.M2		R15,R12,R17
		SADD.M2		R23,R22,R25
	|	SSHFLL		1, R48, R18
		SADD.M2		R18,R16,R20
	|	SADD.M1		4,R49,R37
	|	SSHFLL		2, R35, R33
	|	SSTW		R25, *+AR15[23]
		SSHFLL		2, R36, R61
		SLTU		R33, R44, R24
		SSHFLL		1, R17, R26
		SLTU		R61, R43, R27
	|	SADD.M2		R26,R24,R32
		SSHFLL		1, R20, R28
		SLTU		R37, R21, R29
	|	SADD.M2		R28,R27,R59
		SMOVIL		0, R16
	|	SADD.M2		R25,R29,R3
		SMOVIL		1092616192, R39
		SMOVIL.L		.LC4, R40
		SMOVIL		1, R34
		SLT		R16, R36, R38
		SMOVIH		1092616192, R39
		SMOVIH.L		.LC4, R40
		SMOVIH4.L		.LC4, R41
.L20:
		SMOV.M1		R38, R2
	|	SMVAAGL.M2		OR8, R49:R48
	|	SMOVIL		0, R57
	[!R2]	SBR		.L24
	|	SADD.M1		R13,R37,R60
		SADD.M1		R14,R3,R50
	|	SLTU		R60, R37, R51
	|	SMVAAGH.M2		OR8, R49:R48
		SMOV.M1		R30, R46
		SMOV.M2		R31, R47
	|	SADD.M1		R50,R51,R52
		SNOP		3
	;; condjump to .L24 occurs
.L26:
		SMOVIL		0, R58
	|	SMOV.M2		R13, R42
	|	SMOV.M1		R48, R44
		SMOV.M2		R49, R45
	|	SMOV.M1		R14, R43
	|	SMOVIH		0, R58
.L21:
		SMVAGA36.M1		R43:R42, AR12
	|	SMVAGA36.M2		R45:R44, AR10
		SNOP		1
		SLDW		*AR12, R56
	|	SADD.M2		4,R42,R55
	|	SADD.M1		R44,R61,R0
		SLDW		*AR10, R10
	|	SLTU		R55, R42, R54
	|	SADD.M2		R45,R59,R8
	|	SMOV.M1		R55, R42
		SADD.M2		R43,R54,R43
	|	SEQ		R55, R60, R1
	[R1]	SEQ		R43, R52, R1
		SLTU		R0, R44, R9
	|	SMOV.M2		R0, R44
		SADD.M2		R8,R9,R45
	[!R1]	SBR		.L21
		SFMULAS32.M2	R56, R10, R58, R58
		SNOP		5
	;; condjump to .L21 occurs
		SADD.M2		4,R46,R42
	|	SADD.M1		1,R57,R57
		SLTU		R42, R46, R44
	|	SMOV.M2		R42, R46
	|	SADD.M1		4,R48,R15
		SADD.M2		R47,R44,R47
	|	SEQ		R36, R57, R0
		SMVAGA36.M2		R47:R46, AR10
	|	SLTU		R15, R48, R17
	|	SMOV.M1		R15, R48
		SADD.M1		R49,R17,R49
		SLDW		*AR10, R45
		SNOP		5
		SFSUBS32.M2		R58, R45, R11
		SNOP		2
		SFSPDP32T.M2		R11, R19:R18
		SNOP		1
		SFABSD.M2		R19:R18, R43:R42
		SNOP		1
		SFDPSP32.M2		R43:R42, R12
		SNOP		2
		SFCMPGS32.M2		R12, R39, R2
	[R2]	SBR		.L82
		SNOP		6
	;; condjump to .L82 occurs
	[!R0]	SBR		.L26
		SNOP		6
	;; condjump to .L26 occurs
.L24:
		SADD.M2		1,R16,R16
	|	SADD.M1		R30,R61,R48
		SEQ		R35, R16, R1
	|	SADD.M2		R33,R13,R47
	|	SADD.M1		R31,R59,R31
	[!R1]	SBR		.L20
	|	SLTU		R48, R30, R19
	|	SMOV.M2		R48, R30
	|	SADD.M1		R32,R14,R14
		SADD.M2		R31,R19,R31
	|	SLTU		R47, R13, R20
	|	SMOV.M1		R47, R13
		SADD.M2		R14,R20,R14
		SNOP		4
	;; condjump to .L20 occurs
.L85:
		SMVAAA.M2		AR8, OR0
	|	SLDW		*+AR15[22], R40
	|	SMOVIL		1065353216, R52
		SLDW		*+AR15[23], R30
	|	SMOVIL		1092616192, R29
		SADDA.M2		-4,OR0,OR1
	|	SLDW		*+AR15[18], R60
	|	SMOVIL		0, R11
		SLDW		*+AR15[19], R50
	|	SMOVIH		1065353216, R52
		SMOVIH		1092616192, R29
		SMVAAGL.M2		OR1, R47:R46
		SLTU		R37, R40, R41
		SMVAAGH.M2		OR1, R47:R46
	|	SADD.M1		R30,R41,R57
		SNOP		1
.L25:
		SMOV.M2		R60, R21
	|	SMOV.M1		R50, R22
	|	SMOVIL		0, R23
.L33:
		SADD.M2		R21,R37,R24
	|	SADD.M1		R22,R57,R25
	|	SMOVIL		0, R28
		SLTU		R24, R37, R26
	|	SMOV.M2		R46, R44
	|	SMOV.M1		R47, R45
		SMOV.M2		R21, R42
	|	SADD.M1		R25,R26,R27
	|	SMOVIH		0, R28
		SMOV.M2		R22, R43
.L27:
		SADD.M1		4,R44,R51
	|	SMVAGA36.M2		R43:R42, AR12
		SLTU		R51, R44, R59
	|	SMOV.M1		R51, R44
		SADD.M2		R45,R59,R45
	|	SLDW		*AR12, R61
	|	SADD.M1		4,R42,R3
		SMVAGA36.M2		R45:R44, AR10
	|	SLTU		R3, R42, R38
	|	SMOV.M1		R3, R42
		SADD.M1		R43,R38,R43
	|	SEQ		R3, R24, R2
		SLDW		*AR10, R55
	|[R2]	SEQ		R43, R27, R2
		SNOP		4
	[!R2]	SBR		.L27
		SFMULAS32.M2	R55, R61, R28, R28
		SNOP		5
	;; condjump to .L27 occurs
		SEQ		R23, R11, R0
	[R0]	SBR		.L83
		SNOP		6
	;; condjump to .L83 occurs
		SFSPDP32T.M2		R28, R55:R54
		SNOP		1
		SFABSD.M2		R55:R54, R43:R42
		SNOP		1
		SFDPSP32.M2		R43:R42, R53
		SNOP		2
.L29:
		SFCMPGS32.M2		R53, R29, R1
	[!R1]	SBR		.L30
		SNOP		6
	;; condjump to .L30 occurs
		SMOVIL		0, R34
.L30:
		SADD.M2		1,R23,R23
	|	SADD.M1		R33,R21,R56
		SEQ		R35, R23, R2
	|	SADD.M2		R32,R22,R10
	[!R2]	SBR		.L33
	|	SLTU		R56, R21, R9
	|	SMOV.M2		R56, R21
		SADD.M2		R10,R9,R22
		SNOP		5
	;; condjump to .L33 occurs
		SADD.M2		1,R11,R11
	|	SADD.M1		R46,R33,R45
		SEQ		R35, R11, R0
	|	SADD.M2		R47,R32,R43
	[!R0]	SBR		.L25
	|	SLTU		R45, R46, R44
	|	SMOV.M2		R45, R46
		SADD.M2		R43,R44,R47
		SNOP		5
	;; condjump to .L25 occurs
		SEQ		R36, R35, R1
	[R1]	SBR		.L84
		SNOP		6
	;; condjump to .L84 occurs
.L36:
		SMOV.M2		R34, R0
	|	SMOVIL.L		.LC9, R42
	[R0]	SBR		.L78
	|	SMOVIH.L		.LC9, R42
		SNOP		6
	;; condjump to .L78 occurs
		SMOVIH4.L		.LC9, R43
	|	SSTW		R35, *+AR15[58]
		SSTDW		R43:R42, *+AR15[28]
		SNOP		2
		SSTW		R36, *+AR15[59]
		SNOP		2
		SLDDW		*+AR15[21], R7:R6
		SLDDW		*+AR15[15], R31:R30
		SLDDW		*+AR15[16], R33:R32
		SLDDW		*+AR15[17], R35:R34
		SLDDW		*+AR15[18], R37:R36
		SNOP		1
		SMVAGA36.M2		R7:R6, AR8
		SNOP		3
		SLDDW		*+AR15[22], R7:R6
		SLDDW		*+AR15[19], R39:R38
		SLDDW		*+AR15[20], R41:R40
		SLDDW		*+AR15[25], R63:R62
		SNOP		2
		SMVAGA36.M2		R7:R6, AR9
		SNOP		2
		SLDDW		*+AR15[23], R7:R6
		SNOP		5
		SMVAGA36.M2		R7:R6, OR8
	|	SLDDW		*+AR15[24], R7:R6
		SNOP		5
		SMVAGA36.M2		R7:R6, OR9
	|	SLDDW		*+AR15[26], R7:R6
		SNOP		2
		SBR		printf
		SNOP		2
		SMVAGA36.M2		R7:R6, AR14
	|	SMOVIL		216, R6
		SMOVIL		0, R7
		SADDA.M2		R7:R6,AR15,AR15
	;; sibcall to printf occurs
		SNOP		1
.L83:
		SFSUBS32.M2		R52, R28, R8
		SNOP		2
		SBR		.L29
	|	SFSPDP32T.M2		R8, R43:R42
		SNOP		1
		SFABSD.M2		R43:R42, R43:R42
		SNOP		1
		SFDPSP32.M2		R43:R42, R53
		SNOP		2
	;; jump to .L29 occurs
.L82:
		SFSPDP32T.M2		R12, R47:R46
	|	SSTDW		R41:R40, *+AR15[1]
	|	SMOVIL		0, R34
		SSTW		R59, *+AR15[16]
		SNOP		2
		SSTDW		R47:R46, *+AR15[2]
		SSTW		R13, *+AR15[15]
		SNOP		1
		SBR		printf
		SSTW		R14, *+AR15[14]
	|	SMOVIL		.L95, R62
		SSTW		R16, *+AR15[17]
	|	SMOVIH		.L95, R62
		SMOVIH4.L		.L95, R63
		SNOP		1
		SSTW		R3, *+AR15[12]
		SSTW		R61, *+AR15[13]
	;; call to printf occurs, with return value
		SNOP		2
.L95:
		SLDW		*+AR15[17], R16
		SLDW		*+AR15[15], R13
		SLDW		*+AR15[13], R61
		SLDW		*+AR15[16], R59
		SLDW		*+AR15[14], R14
		SNOP		1
		SADD.M2		1,R16,R16
		SEQ		R35, R16, R1
	|	SADD.M2		R33,R13,R47
		SADD.M2		R30,R61,R48
	|	SLTU		R47, R13, R20
	|	SMOV.M1		R47, R13
	[!R1]	SBR		.L20
	|	SLTU		R48, R30, R19
	|	SMOV.M2		R48, R30
	|	SADD.M1		R31,R59,R31
		SLDW		*+AR15[12], R3
	|	SADD.M2		R31,R19,R31
	|	SADD.M1		R32,R14,R14
		SADD.M2		R14,R20,R14
		SNOP		4
	;; condjump to .L20 occurs
		SBR		.L85
		SNOP		6
	;; jump to .L85 occurs
.L81:
		SBR		puts
	|	SMOVIH4.L		.LC3, R11
		SMOVIL		.L96, R62
		SMOVIH		.L96, R62
		SMOVIH4.L		.L96, R63
		SMOVIL.L		.LC3, R10
		SMOVIH.L		.LC3, R10
	;; call to puts occurs, with return value
		SNOP		1
.L96:
		SMOVIL		0, R3
		SLT		R3, R35, R0
	[R0]	SBR		.L86
	|	SSTW		R0, *+AR15[24]
		SNOP		6
	;; condjump to .L86 occurs
.L19:
		SEQ		R36, R35, R1
	[!R1]	SBR		.L78
		SNOP		6
	;; condjump to .L78 occurs
		SBR		GetTimerCount
	|	SMOVIL		0, R10
		SMOVIL		.L97, R62
		SMOVIH		.L97, R62
		SMOVIH4.L		.L97, R63
		SMOVIL		1, R34
	;; call to GetTimerCount occurs, with return value
		SNOP		2
.L97:
		SLDDW		*+AR15[10], R31:R30
	|	SMVAAGL.M1		AR8, R15:R14
	|	SMVAAGL.M2		OR8, R17:R16
		SLDDW		*+AR15[14], R21:R20
	|	SMVAAGL.M1		OR9, R19:R18
	|	SMVAAGL.M2		AR9, R23:R22
		SMVAAGH.M1		AR8, R15:R14
	|	SMVAAGH.M2		OR8, R17:R16
		SMVAAGH.M1		OR9, R19:R18
	|	SMVAAGH.M2		AR9, R23:R22
		SNOP		1
		SMOV.M2		R10, R32
	|	SMOV.M1		R35, R12
		SMVCGC.L		R31:R30, BRReg
	|	SMOV.M2		R35, R10
		SNOP		1
		SBR		R31:R30
		SMOVIL		.L98, R62
		SMOVIH		.L98, R62
		SMOVIH4.L		.L98, R63
	;; indirect call occurs, with return value
		SNOP		3
.L98:
		SBR		GetTimerCount
	|	SMOV.M2		R10, R33
	|	SMOVIL		0, R10
		SMOVIL		.L99, R62
		SMOVIH		.L99, R62
		SMOVIH4.L		.L99, R63
	;; call to GetTimerCount occurs, with return value
		SNOP		3
.L99:
		SMOVIL		-1, R43
	|	SSUB.M2		R32, R10, R21
		SEQ		R43, R33, R1
	|	SSTW		R21, *+AR15[25]
	[R1]	SBR		.L87
		SNOP		6
	;; condjump to .L87 occurs
.L37:
		SLDW		*+AR15[24], R2
	|	SMVAAA.M2		OR9, OR0
	|	SADD.M1		-1,R35,R23
	|	SSHFLL		1, R35, R24
		SSHFLL		1, R23, R25
	|	SMVAAGL.M1		AR9, R51:R50
		SADDA.M2		-4,OR0,AR2
	|	SMVAAA.M1		AR14, OR0
	|	SSHFLL		2, R23, R26
		SLTU		R25, R23, R27
	|	SMVAAGH.M1		AR9, R51:R50
		SADDA.M1		-4,OR0,OR2
	|	SSHFAR		31, R35, R29
		SADD.M2		4,R26,R28
	|	SLTU		R26, R25, R60
	[!R2]	SBR		.L36
	|	SSHFLL		1, R27, R52
	|	SMVAAGL.M1		AR2, R49:R48
	|	SADD.M2		R50,R28,R59
		SMVAAGL.M1		OR2, R47:R46
	|	SLTU		R24, R35, R37
	|	SADD.M2		R52,R60,R57
		SSHFLL		1, R29, R58
	|	SMVAAGH.M1		AR2, R49:R48
	|	SMOV.M2		R50, R42
		SLTU		R28, R26, R3
	|	SMVAAGH.M1		OR2, R47:R46
	|	SADD.M2		R58,R37,R38
		SSHFLL		2, R35, R9
	|	SADD.M2		R57,R3,R39
		SLTU		R9, R24, R61
	|	SADD.M2		R51,R39,R55
	|	SMOV.M1		R46, R44
		SSHFLL		1, R38, R54
	|	SMOV.M2		R47, R45
	;; condjump to .L36 occurs
		SLTU		R59, R28, R53
	|	SADD.M2		R54,R61,R11
	|	SMOV.M1		R51, R43
		SMOVIL		1109393408, R10
	|	SADD.M2		R55,R53,R18
		SMOVIL		0, R8
		SMOVIL		0, R41
		SMOVIH		1109393408, R10
		SMOVIH		0, R8
.L39:
		SADD.M1		4,R44,R12
	|	SMVAGA36.M2		R43:R42, AR12
		SLTU		R12, R44, R56
	|	SMOV.M1		R12, R44
		SADD.M2		R45,R56,R45
	|	SLDW		*AR12, R17
	|	SADD.M1		4,R42,R16
		SMVAGA36.M2		R45:R44, AR10
	|	SLTU		R16, R42, R19
	|	SMOV.M1		R16, R42
		SADD.M1		R43,R19,R43
	|	SEQ		R16, R59, R0
		SLDW		*AR10, R20
	|[R0]	SEQ		R43, R18, R0
		SNOP		4
	[!R0]	SBR		.L39
		SFMULAS32.M2	R20, R17, R8, R8
		SNOP		5
	;; condjump to .L39 occurs
		SADD.M2		4,R48,R42
	|	SADD.M1		1,R41,R41
		SLTU		R42, R48, R44
	|	SMOV.M2		R42, R48
		SADD.M2		R49,R44,R49
	|	SEQ		R35, R41, R2
		SMVAGA36.M2		R49:R48, AR10
		SNOP		1
		SLDW		*AR10, R14
		SNOP		5
		SFSUBS32.M2		R8, R14, R40
	|	SMOVIL		0, R8
		SMOVIH		0, R8
		SNOP		1
		SFSPDP32T.M2		R40, R23:R22
		SNOP		1
		SFABSD.M2		R23:R22, R43:R42
		SNOP		1
		SFDPSP32.M2		R43:R42, R43
		SNOP		1
		SMOV.M1		R50, R42
		SFCMPGS32.M2		R43, R10, R1
	[R1]	SBR		.L88
		SNOP		6
	;; condjump to .L88 occurs
	[R2]	SBR		.L36
	|	SADD.M2		R47,R11,R43
	|	SADD.M1		R46,R9,R45
	[!R2]	SBR		.L39
	|	SLTU		R45, R46, R32
	|	SMOV.M2		R45, R46
		SADD.M2		R43,R32,R47
	|	SMOV.M1		R46, R44
		SMOV.M2		R47, R45
		SNOP		3
	;; condjump to .L36 occurs
		SMOV.M2		R51, R43
	;; jump to .L39 occurs
.L78:
		SMOVIL.L		.LC7, R42
		SMOVIH.L		.LC7, R42
		SBR		printf
	|	SMOVIH4.L		.LC7, R43
		SSTDW		R43:R42, *+AR15[1]
	|	SMOVIL		.L100, R62
		SMOVIH		.L100, R62
		SMOVIH4.L		.L100, R63
	;; call to printf occurs, with return value
		SNOP		3
.L100:
		SLDW		*+AR15[27], R50
	|	SMOVIL.L		.LC8, R46
		SLDW		*+AR15[26], R51
	|	SMOVIH.L		.LC8, R46
		SLDW		*+AR15[25], R49
	|	SMOVIH4.L		.LC8, R47
		SMOVIL		0, R42
		SMOVIL		0, R43
		SNOP		2
		SSUB.M2		R51, R50, R34
		SFINTSU32.M1		R49,R48
	|	SSTW		R35, *+AR15[4]
	|	SFINTSU32.M2		R34,R35
		SSTDW		R47:R46, *+AR15[1]
		SNOP		1
		SFSPDP32T.M1		R35, R31:R30
	|	SFSPDP32T.M2		R48, R47:R46
		SSTW		R36, *+AR15[5]
		SBR		printf
	|	SSTDW		R47:R46, *+AR15[4]
		SMOVIL		.L101, R62
		SMOVIH		.L101, R62
		SSTDW		R31:R30, *+AR15[3]
	|	SMOVIH4.L		.L101, R63
		SSTDW		R43:R42, *+AR15[5]
	;; call to printf occurs, with return value
		SNOP		2
.L101:
		SLDDW		*+AR15[21], R7:R6
		SLDDW		*+AR15[25], R63:R62
		SLDDW		*+AR15[15], R31:R30
		SLDDW		*+AR15[16], R33:R32
		SLDDW		*+AR15[17], R35:R34
		SNOP		1
		SMVAGA36.M2		R7:R6, AR8
		SMVCGC.L		R63, BRReg
		SNOP		2
		SLDDW		*+AR15[22], R7:R6
		SLDDW		*+AR15[18], R37:R36
		SLDDW		*+AR15[19], R39:R38
		SLDDW		*+AR15[20], R41:R40
		SNOP		2
		SMVAGA36.M2		R7:R6, AR9
		SNOP		2
		SLDDW		*+AR15[23], R7:R6
		SNOP		5
		SMVAGA36.M2		R7:R6, OR8
	|	SLDDW		*+AR15[24], R7:R6
		SNOP		5
		SMVAGA36.M2		R7:R6, OR9
	|	SLDDW		*+AR15[26], R7:R6
		SNOP		2
		SBR		R62
		SNOP		2
		SMVAGA36.M2		R7:R6, AR14
	|	SMOVIL		216, R6
		SMOVIL		0, R7
		SADDA.M2		R7:R6,AR15,AR15
		SNOP		1
	;; return occurs
.L84:
		SADD.M1		1,R35,R18
	|	SMVAAGL.M2		OR8, R43:R42
	|	SMOVIL		1065353216, R31
		SSHFLL		1, R18, R12
		SSHFAR		31, R18, R15
	|	SMVAAGH.M2		OR8, R43:R42
		SLTU		R12, R18, R17
		SSHFLL		1, R15, R49
		SADD.M2		R49,R17,R46
	|	SSHFLL		2, R18, R48
		SLTU		R48, R12, R47
		SSHFLL		1, R46, R16
		SMOVIL		1, R0
	|	SADD.M2		R16,R47,R19
		SMOVIL		0, R13
		SMOVIH		1065353216, R31
.L35:
		SMVAGA36.M2		R43:R42, AR10
	|	SADD.M1		1,R13,R13
		SEQ		R35, R13, R1
	|	SADD.M1		R42,R48,R20
		SLDW		*AR10, R40
	|	SLTU		R20, R42, R14
	|	SADD.M2		R43,R19,R43
	|	SMOV.M1		R20, R42
		SADD.M2		R43,R14,R43
		SNOP		4
		SFSPDP32T.M2		R40, R23:R22
		SNOP		1
		SFABSD.M2		R23:R22, R45:R44
		SNOP		1
		SFDPSP32.M2		R45:R44, R41
		SNOP		2
		SFCMPLS32.M2		R41, R31, R2
	[R2]	SBR		.L89
		SNOP		6
	;; condjump to .L89 occurs
	[!R1]	SBR		.L35
		SNOP		6
	;; condjump to .L35 occurs
.L90:
	[!R0]	SBR		.L36
	|	SMOVIL		0, R10
	[R0]	SBR		GetTimerCount
	[R0]	SMOVIL		.L102, R62
	[R0]	SMOVIH		.L102, R62
	[R0]	SMOVIH4.L		.L102, R63
		SNOP		3
	;; condjump to .L36 occurs
	;; call to GetTimerCount occurs, with return value
.L102:
		SLDDW		*+AR15[10], R31:R30
	|	SMVAAGL.M1		AR8, R15:R14
	|	SMVAAGL.M2		OR8, R17:R16
		SLDDW		*+AR15[14], R21:R20
	|	SMVAAGL.M1		OR9, R19:R18
	|	SMVAAGL.M2		AR9, R23:R22
		SMVAAGH.M1		AR8, R15:R14
	|	SMVAAGH.M2		OR8, R17:R16
		SMVAAGH.M1		OR9, R19:R18
	|	SMVAAGH.M2		AR9, R23:R22
		SNOP		1
		SMOV.M2		R10, R32
	|	SMOV.M1		R35, R12
		SMVCGC.L		R31:R30, BRReg
	|	SMOV.M2		R35, R10
		SNOP		1
		SBR		R31:R30
		SMOVIL		.L103, R62
		SMOVIH		.L103, R62
		SMOVIH4.L		.L103, R63
	;; indirect call occurs, with return value
		SNOP		3
.L103:
		SBR		GetTimerCount
	|	SMOV.M2		R10, R33
	|	SMOVIL		0, R10
		SMOVIL		.L104, R62
		SMOVIH		.L104, R62
		SMOVIH4.L		.L104, R63
	;; call to GetTimerCount occurs, with return value
		SNOP		3
.L104:
		SMOVIL		-1, R43
	|	SSUB.M2		R32, R10, R21
		SEQ		R43, R33, R1
	|	SSTW		R21, *+AR15[25]
	[!R1]	SBR		.L37
		SNOP		6
	;; condjump to .L37 occurs
		SBR		.L87
		SNOP		6
	;; jump to .L87 occurs
.L89:
	[!R1]	SBR		.L35
	|	SMOVIL		0, R0
		SNOP		6
	;; condjump to .L35 occurs
		SBR		.L90
		SNOP		6
	;; jump to .L90 occurs
.L88:
		SFSPDP32T.M2		R43, R25:R24
	|	SMOVIL.L		.LC6, R44
		SMOVIH.L		.LC6, R44
		SBR		printf
	|	SMOVIH4.L		.LC6, R45
	|	SSTDW		R25:R24, *+AR15[2]
		SSTDW		R45:R44, *+AR15[1]
	|	SMOVIL		.L105, R62
		SMOVIH		.L105, R62
		SMOVIH4.L		.L105, R63
	;; call to printf occurs, with return value
		SNOP		3
.L105:
		SMOVIL.L		.LC9, R42
	|	SSTW		R35, *+AR15[58]
		SMOVIH.L		.LC9, R42
	|	SSTW		R36, *+AR15[59]
		SMOVIH4.L		.LC9, R43
		SNOP		1
		SSTDW		R43:R42, *+AR15[28]
		SNOP		2
		SLDDW		*+AR15[21], R7:R6
		SLDDW		*+AR15[15], R31:R30
		SLDDW		*+AR15[16], R33:R32
		SLDDW		*+AR15[17], R35:R34
		SLDDW		*+AR15[18], R37:R36
		SNOP		1
		SMVAGA36.M2		R7:R6, AR8
		SNOP		3
		SLDDW		*+AR15[22], R7:R6
		SLDDW		*+AR15[19], R39:R38
		SLDDW		*+AR15[20], R41:R40
		SLDDW		*+AR15[25], R63:R62
		SNOP		2
		SMVAGA36.M2		R7:R6, AR9
		SNOP		2
		SLDDW		*+AR15[23], R7:R6
		SNOP		5
		SMVAGA36.M2		R7:R6, OR8
	|	SLDDW		*+AR15[24], R7:R6
		SNOP		5
		SMVAGA36.M2		R7:R6, OR9
	|	SLDDW		*+AR15[26], R7:R6
		SNOP		2
		SBR		printf
		SNOP		2
		SMVAGA36.M2		R7:R6, AR14
	|	SMOVIL		216, R6
		SMOVIL		0, R7
		SADDA.M2		R7:R6,AR15,AR15
	;; sibcall to printf occurs
		SNOP		1
.L87:
		SBR		puts
	|	SMOVIH4.L		.LC5, R11
		SMOVIL		.L106, R62
		SMOVIH		.L106, R62
		SMOVIH4.L		.L106, R63
		SMOVIL.L		.LC5, R10
		SMOVIH.L		.LC5, R10
	;; call to puts occurs, with return value
		SNOP		1
.L106:
		SBR		.L37
		SNOP		6
	;; jump to .L37 occurs
	.size	testQr, .-testQr
	.section	.const,"a",@progbits
.LC10:
	.string	"test %d\n"
	.section	.text.startup.main,"ax",@progbits
	.align	2
	.global	main
	.type	main, @function
main:
		SMOVIL		-184, R6
		SMOVIL		-1, R7
		SADDA.M2		R7:R6,AR15,AR15
		SMVAAGL.M1		AR14, R7:R6
	|	SMOVIL		1075052548, R46
		SMOVIH		1075052548, R46
	|	SSTDW		R63:R62, *+AR15[21]
		SMVAAGH.M2		AR14, R7:R6
	|	SMOVIL		0, R47
	|	SSTDW		R41:R40, *+AR15[16]
		SMVAGA36.M1		R47:R46, AR10
	|	SMOVIL		1075052544, R42
		SMOVIL		1, R44
		SSTDW		R7:R6, *+AR15[22]
		SMVAAGL.M2		OR9, R7:R6
	|	SSTDW		R39:R38, *+AR15[15]
		SMOVIH		1075052544, R42
		SMVAAGH.M2		OR9, R7:R6
	|	SMOVIL		0, R43
		SSTDW		R37:R36, *+AR15[14]
		SSTDW		R7:R6, *+AR15[20]
		SMVAAGL.M2		OR8, R7:R6
		SNOP		1
		SMVAAGH.M2		OR8, R7:R6
	|	SSTDW		R35:R34, *+AR15[13]
		SSTDW		R33:R32, *+AR15[12]
		SNOP		2
		SSTDW		R7:R6, *+AR15[19]
		SMVAAGL.M2		AR9, R7:R6
	|	SSTDW		R31:R30, *+AR15[11]
		SNOP		1
		SMVAAGH.M2		AR9, R7:R6
		SNOP		1
		SSTDW		R7:R6, *+AR15[18]
		SMVAAGL.M2		AR8, R7:R6
		SNOP		1
		SMVAAGH.M2		AR8, R7:R6
		SNOP		1
		SSTDW		R7:R6, *+AR15[17]
		SSTW		R44, *AR10
	|	SMVAGA36.M2		R43:R42, AR10
		SNOP		2
		SSTW		R44, *AR10
	|	SMVAGA36.M2		R43:R42, AR10
		SSTW		R44, *+AR15[21]
		SNOP		2
		SLDW		*+AR15[21], R0
		SNOP		5
	[!R0]	SBR		.L110
		SNOP		6
	;; condjump to .L110 occurs
.L136:
		SLDW		*AR10, R42
		SNOP		5
		SSTW		R42, *+AR15[21]
		SNOP		2
		SLDW		*+AR15[21], R1
		SNOP		5
	[R1]	SBR		.L136
		SNOP		6
	;; condjump to .L136 occurs
.L110:
		SBR		SetTimerPeriod
	|	SMOVIL		-1, R12
		SMOVIL		.L151, R62
		SMOVIH		.L151, R62
		SMOVIH4.L		.L151, R63
		SMOVIL		0, R10
		SMOVIL		973082626, R38
	;; call to SetTimerPeriod occurs
		SMOVIH		973082626, R38
.L151:
		SBR		TimerStart
	|	SMOVIL		0, R2
		SSTW		R2, *+AR15[17]
	|	SMOVIL		.L152, R62
		SMOVIH		.L152, R62
		SMOVIH4.L		.L152, R63
		SMOVIL		0, R10
	;; call to TimerStart occurs
		SNOP		2
.L152:
		SBR		malloc
	|	SMOVIL		1024, R10
		SMOVIL		.L153, R62
		SMOVIH		.L153, R62
		SMOVIH4.L		.L153, R63
		SMOVIL		0, R11
	;; call to malloc occurs, with return value
		SNOP		2
.L153:
		SBR		malloc
	|	SMVAGA36.M2		R11:R10, OR8
	|	SMOVIL		1024, R10
		SMOVIL		.L154, R62
		SMOVIH		.L154, R62
		SMOVIH4.L		.L154, R63
		SMOVIL		0, R11
	;; call to malloc occurs, with return value
		SNOP		2
.L154:
		SBR		malloc
	|	SMVAGA36.M2		R11:R10, AR8
	|	SMOVIL		1024, R10
		SMOVIL		.L155, R62
		SMOVIH		.L155, R62
		SMOVIH4.L		.L155, R63
		SMOVIL		0, R11
	;; call to malloc occurs, with return value
		SNOP		2
.L155:
		SBR		malloc
	|	SMVAGA36.M2		R11:R10, AR14
	|	SMOVIL		1024, R10
		SMOVIL		.L156, R62
		SMOVIH		.L156, R62
		SMOVIH4.L		.L156, R63
		SMOVIL		0, R11
	;; call to malloc occurs, with return value
		SNOP		2
.L156:
		SBR		malloc
	|	SMVAGA36.M2		R11:R10, AR9
	|	SMOVIL		64, R10
		SMOVIL		.L157, R62
		SMOVIH		.L157, R62
		SMOVIH4.L		.L157, R63
		SMOVIL		0, R11
	;; call to malloc occurs, with return value
		SNOP		2
.L157:
		SBR		malloc
	|	SMVAGA36.M2		R11:R10, OR9
	|	SMOVIL		64, R10
		SMOVIL		.L158, R62
		SMOVIH		.L158, R62
		SMOVIH4.L		.L158, R63
		SMOVIL		0, R11
	;; call to malloc occurs, with return value
		SNOP		2
.L158:
		SBR		malloc
	|	SSTDW		R11:R10, *+AR15[4]
	|	SMOVIL		64, R10
		SMOVIL		.L159, R62
		SMOVIH		.L159, R62
		SMOVIH4.L		.L159, R63
		SMOVIL		0, R11
	;; call to malloc occurs, with return value
		SNOP		2
.L159:
		SBR		malloc
	|	SSTDW		R11:R10, *+AR15[5]
	|	SMOVIL		64, R10
		SMOVIL		.L160, R62
		SMOVIH		.L160, R62
		SMOVIH4.L		.L160, R63
		SMOVIL		0, R11
	;; call to malloc occurs, with return value
		SNOP		2
.L160:
		SLDDW		*+AR15[4], R9:R8
	|	SMVAAA.M1		OR8, OR0
	|	SMVAAGL.M2		OR8, R43:R42
	|	SMOVIL		1020, R3
		SSTDW		R11:R10, *+AR15[6]
		SADDA.M2		-4,OR0,AR0
	|	SMVAAGH.M1		OR8, R43:R42
		SNOP		1
		SADD.M1		R3,R42,R39
		SMVAAGL.M2		AR0, R13:R12
		SMVAGA36.M1		R9:R8, OR11
	|	SLTU		R39, R42, R9
		SMVAAGH.M1		AR0, R13:R12
	|	SADD.M2		R43,R9,R43
		SADDA.M1		-4,OR11,OR12
	|	SSTW		R43, *+AR15[16]
		SSTDW		R13:R12, *+AR15[7]
		SMVAAGL.M2		OR12, R11:R10
		SNOP		1
		SMVAAGH.M2		OR12, R11:R10
		SNOP		1
		SSTDW		R11:R10, *+AR15[9]
.L109:
		SMOVIL.L		.LC10, R46
	|	SLDDW		*+AR15[9], R35:R34
		SMOVIH.L		.LC10, R46
	|	SLDDW		*+AR15[7], R31:R30
		SMOVIH4.L		.LC10, R47
		SNOP		3
		SMOV.M2		R34, R36
	|	SMOV.M1		R35, R37
		SSTDW		R47:R46, *+AR15[1]
	|	SMOV.M2		R30, R32
	|	SMOV.M1		R31, R33
		SLDW		*+AR15[17], R47
		SNOP		1
		SBR		printf
		SMOVIL		.L161, R62
		SMOVIH		.L161, R62
		SMOVIH4.L		.L161, R63
		SSTW		R47, *+AR15[4]
	;; call to printf occurs, with return value
		SNOP		2
.L161:
		SBR		srand
	|	SMOVIL		0, R10
		SMOVIL		.L162, R62
		SMOVIH		.L162, R62
		SMOVIH4.L		.L162, R63
	;; call to srand occurs
		SNOP		3
.L162:
.L111:
		SMOVIL		64, R11
		SADD.M2		R11,R32,R41
		SLTU		R41, R32, R14
		SADD.M2		R33,R14,R40
.L112:
		SBR		rand
		SMOVIL		.L163, R62
		SMOVIH		.L163, R62
		SMOVIH4.L		.L163, R63
	;; call to rand occurs, with return value
		SNOP		3
.L163:
		SADD.M1		4,R32,R16
	|	SFINTS32.M2		R10,R15
		SLTU		R16, R32, R17
	|	SMOV.M2		R16, R32
		SADD.M1		R33,R17,R33
	|	SEQ		R16, R41, R0
	[R0]	SEQ		R33, R40, R0
	|	SFMULS32.M2		R15, R38, R19
	|	SMVAGA36.M1		R33:R32, AR10
	[!R0]	SBR		.L112
		SNOP		2
		SSTW		R19, *AR10
		SNOP		3
	;; condjump to .L112 occurs
		SBR		rand
		SMOVIL		.L164, R62
		SMOVIH		.L164, R62
		SMOVIH4.L		.L164, R63
	;; call to rand occurs, with return value
		SNOP		3
.L164:
		SLDW		*+AR15[16], R24
	|	SEQ		R39, R41, R1
	|	SFINTS32.M2		R10,R20
	|	SADD.M1		4,R36,R21
		SMOVIL		973082626, R25
		SMOVIH		973082626, R25
		SLTU		R21, R36, R22
	|	SFMULS32.M2		R20, R25, R26
	|	SMOV.M1		R21, R36
		SADD.M1		R37,R22,R37
		SMVAGA36.M1		R37:R36, AR10
	[R1]	SEQ		R24, R40, R1
	[!R1]	SBR		.L111
	|	SSTW		R26, *AR10
		SNOP		6
	;; condjump to .L111 occurs
		SLDDW		*+AR15[5], R29:R28
	|	SMVAAGL.M1		OR8, R17:R16
	|	SMVAAGL.M2		AR8, R19:R18
	|	SMOVIL.L		trival_qr, R10
		SLDDW		*+AR15[4], R47:R46
	|	SMVAAGL.M1		AR14, R21:R20
	|	SMVAAGL.M2		OR9, R27:R26
	|	SMOVIL.L		trival_qr_solver, R12
		SLDDW		*+AR15[6], R33:R32
	|	SMVAAGH.M1		OR8, R17:R16
	|	SMVAAGH.M2		AR8, R19:R18
	|	SMOVIL.L		trival_inverse, R14
		SMVAAGH.M1		AR14, R21:R20
	|	SMVAAGH.M2		OR9, R27:R26
	|	SMOVIH.L		trival_qr, R10
		SMOVIH4.L		trival_qr, R11
		SMOVIH.L		trival_qr_solver, R12
	|	SMOV.M2		R34, R36
	|	SMOV.M1		R35, R37
		SMOVIH4.L		trival_qr_solver, R13
		SMOVIH.L		trival_inverse, R14
		SBR		testQr
	|	SSTDW		R29:R28, *+AR15[2]
	|	SMOVIH4.L		trival_inverse, R15
	|	SMVAAGL.M2		AR9, R29:R28
		SSTDW		R47:R46, *+AR15[1]
	|	SMOVIL		.L165, R62
		SMVAAGH.M2		AR9, R29:R28
	|	SMOVIH		.L165, R62
		SMOVIH4.L		.L165, R63
		SSTDW		R33:R32, *+AR15[3]
	|	SMOVIL		16, R22
		SMOVIL		16, R24
	;; call to testQr occurs
		SNOP		1
.L165:
		SBR		srand
	|	SLDDW		*+AR15[7], R33:R32
	|	SMOVIL		0, R10
		SMOVIL		.L166, R62
		SMOVIH		.L166, R62
		SMOVIH4.L		.L166, R63
	;; call to srand occurs
		SNOP		3
.L166:
.L114:
		SMOVIL		64, R27
		SADD.M2		R27,R32,R41
		SLTU		R41, R32, R45
		SADD.M2		R33,R45,R40
.L115:
		SBR		rand
		SMOVIL		.L167, R62
		SMOVIH		.L167, R62
		SMOVIH4.L		.L167, R63
	;; call to rand occurs, with return value
		SNOP		3
.L167:
		SADD.M1		4,R32,R49
	|	SFINTS32.M2		R10,R48
		SLTU		R49, R32, R50
	|	SMOV.M2		R49, R32
		SADD.M1		R33,R50,R33
	|	SEQ		R49, R41, R2
	[R2]	SEQ		R33, R40, R2
	|	SFMULS32.M2		R48, R38, R52
	|	SMVAGA36.M1		R33:R32, AR10
	[!R2]	SBR		.L115
		SNOP		2
		SSTW		R52, *AR10
		SNOP		3
	;; condjump to .L115 occurs
		SBR		rand
		SMOVIL		.L168, R62
		SMOVIH		.L168, R62
		SMOVIH4.L		.L168, R63
	;; call to rand occurs, with return value
		SNOP		3
.L168:
		SLDW		*+AR15[16], R57
	|	SEQ		R39, R41, R0
	|	SFINTS32.M2		R10,R53
	|	SADD.M1		4,R36,R54
		SMOVIL		973082626, R58
		SMOVIH		973082626, R58
		SLTU		R54, R36, R55
	|	SFMULS32.M2		R53, R58, R59
	|	SMOV.M1		R54, R36
		SADD.M1		R37,R55,R37
		SMVAGA36.M1		R37:R36, AR10
	[R0]	SEQ		R57, R40, R0
	[!R0]	SBR		.L114
	|	SSTW		R59, *AR10
		SNOP		6
	;; condjump to .L114 occurs
		SLDDW		*+AR15[4], R37:R36
	|	SMVAAGL.M1		OR8, R17:R16
	|	SMVAAGL.M2		AR8, R19:R18
	|	SMOVIL.L		trival_qr, R10
		SLDDW		*+AR15[5], R61:R60
	|	SMVAAGL.M1		AR14, R21:R20
	|	SMVAAGL.M2		OR9, R27:R26
	|	SMOVIL.L		DSPF_sp_qrd_solver1, R12
		SLDDW		*+AR15[6], R45:R44
	|	SMVAAGL.M1		AR9, R29:R28
	|	SMVAAGH.M2		OR8, R17:R16
	|	SMOVIL.L		trival_inverse, R14
		SMVAAGH.M1		AR8, R19:R18
	|	SMVAAGH.M2		AR14, R21:R20
	|	SMOVIH.L		trival_qr, R10
		SMVAAGH.M1		OR9, R27:R26
	|	SMVAAGH.M2		AR9, R29:R28
	|	SMOVIH4.L		trival_qr, R11
		SMOVIH.L		DSPF_sp_qrd_solver1, R12
		SMOVIH4.L		DSPF_sp_qrd_solver1, R13
		SMOVIH.L		trival_inverse, R14
		SBR		testQr
	|	SSTDW		R37:R36, *+AR15[1]
	|	SMOVIH4.L		trival_inverse, R15
	|	SMOV.M2		R34, R36
	|	SMOV.M1		R35, R37
		SSTDW		R61:R60, *+AR15[2]
	|	SMOVIL		.L169, R62
		SMOVIH		.L169, R62
		SMOVIH4.L		.L169, R63
		SSTDW		R45:R44, *+AR15[3]
	|	SMOVIL		16, R22
		SMOVIL		16, R24
	;; call to testQr occurs
		SNOP		1
.L169:
		SBR		srand
	|	SLDDW		*+AR15[7], R33:R32
	|	SMOVIL		0, R10
		SMOVIL		.L170, R62
		SMOVIH		.L170, R62
		SMOVIH4.L		.L170, R63
	;; call to srand occurs
		SNOP		3
.L170:
.L117:
		SMOVIL		64, R61
		SADD.M2		R61,R32,R41
		SLTU		R41, R32, R3
		SADD.M2		R33,R3,R40
.L118:
		SBR		rand
		SMOVIL		.L171, R62
		SMOVIH		.L171, R62
		SMOVIH4.L		.L171, R63
	;; call to rand occurs, with return value
		SNOP		3
.L171:
		SFINTS32.M2		R10,R8
	|	SADD.M1		4,R32,R10
		SLTU		R10, R32, R9
	|	SMOV.M2		R10, R32
		SADD.M1		R33,R9,R33
	|	SEQ		R10, R41, R1
	[R1]	SEQ		R33, R40, R1
	|	SFMULS32.M2		R8, R38, R43
	|	SMVAGA36.M1		R33:R32, AR10
	[!R1]	SBR		.L118
		SNOP		2
		SSTW		R43, *AR10
		SNOP		3
	;; condjump to .L118 occurs
		SBR		rand
		SMOVIL		.L172, R62
		SMOVIH		.L172, R62
		SMOVIH4.L		.L172, R63
	;; call to rand occurs, with return value
		SNOP		3
.L172:
		SLDW		*+AR15[16], R15
	|	SEQ		R39, R41, R2
	|	SFINTS32.M2		R10,R11
	|	SADD.M1		4,R36,R47
		SMOVIL		973082626, R16
		SMOVIH		973082626, R16
		SLTU		R47, R36, R13
	|	SFMULS32.M2		R11, R16, R17
	|	SMOV.M1		R47, R36
		SADD.M1		R37,R13,R37
		SMVAGA36.M1		R37:R36, AR10
	[R2]	SEQ		R15, R40, R2
	[!R2]	SBR		.L117
	|	SSTW		R17, *AR10
		SNOP		6
	;; condjump to .L117 occurs
		SLDDW		*+AR15[4], R19:R18
	|	SMVAAGL.M1		OR8, R17:R16
	|	SMVAAGL.M2		OR9, R27:R26
	|	SMOVIL.L		trival_qr, R10
		SLDDW		*+AR15[5], R21:R20
	|	SMVAAGL.M1		AR9, R29:R28
	|	SMOVIL.L		DSPF_sp_qrd_solver3, R12
		SLDDW		*+AR15[6], R23:R22
	|	SMVAAGH.M1		OR8, R17:R16
	|	SMVAAGH.M2		OR9, R27:R26
	|	SMOVIL.L		trival_inverse, R14
		SMVAAGH.M1		AR9, R29:R28
	|	SMOVIH.L		trival_qr, R10
		SMOVIH4.L		trival_qr, R11
	|	SMOV.M2		R34, R36
		SMOVIH.L		DSPF_sp_qrd_solver3, R12
	|	SMOV.M2		R35, R37
		SMOVIH4.L		DSPF_sp_qrd_solver3, R13
		SMOVIH.L		trival_inverse, R14
		SBR		testQr
	|	SSTDW		R19:R18, *+AR15[1]
	|	SMOVIH4.L		trival_inverse, R15
	|	SMVAAGL.M2		AR8, R19:R18
		SSTDW		R21:R20, *+AR15[2]
	|	SMVAAGL.M1		AR14, R21:R20
	|	SMOVIL		.L173, R62
		SMVAAGH.M1		AR8, R19:R18
	|	SMOVIH		.L173, R62
		SMVAAGH.M1		AR14, R21:R20
	|	SMOVIH4.L		.L173, R63
		SSTDW		R23:R22, *+AR15[3]
	|	SMOVIL		16, R24
		SMOVIL		16, R22
	;; call to testQr occurs
		SNOP		1
.L173:
		SBR		srand
	|	SLDDW		*+AR15[7], R33:R32
	|	SMOVIL		0, R10
		SMOVIL		.L174, R62
		SMOVIH		.L174, R62
		SMOVIH4.L		.L174, R63
	;; call to srand occurs
		SNOP		3
.L174:
.L120:
		SMOVIL		64, R19
		SADD.M2		R19,R32,R41
		SLTU		R41, R32, R23
		SADD.M2		R33,R23,R40
.L121:
		SBR		rand
		SMOVIL		.L175, R62
		SMOVIH		.L175, R62
		SMOVIH4.L		.L175, R63
	;; call to rand occurs, with return value
		SNOP		3
.L175:
		SADD.M1		4,R32,R25
	|	SFINTS32.M2		R10,R24
		SLTU		R25, R32, R26
	|	SMOV.M2		R25, R32
		SADD.M1		R33,R26,R33
	|	SEQ		R25, R41, R0
	[R0]	SEQ		R33, R40, R0
	|	SFMULS32.M2		R24, R38, R28
	|	SMVAGA36.M1		R33:R32, AR10
	[!R0]	SBR		.L121
		SNOP		2
		SSTW		R28, *AR10
		SNOP		3
	;; condjump to .L121 occurs
		SBR		rand
		SMOVIL		.L176, R62
		SMOVIH		.L176, R62
		SMOVIH4.L		.L176, R63
	;; call to rand occurs, with return value
		SNOP		3
.L176:
		SLDW		*+AR15[16], R49
	|	SEQ		R39, R41, R1
	|	SFINTS32.M2		R10,R27
	|	SADD.M1		4,R36,R29
		SMOVIL		973082626, R50
		SMOVIH		973082626, R50
		SLTU		R29, R36, R45
	|	SFMULS32.M2		R27, R50, R51
	|	SMOV.M1		R29, R36
		SADD.M1		R37,R45,R37
		SMVAGA36.M1		R37:R36, AR10
	[R1]	SEQ		R49, R40, R1
	[!R1]	SBR		.L120
	|	SSTW		R51, *AR10
		SNOP		6
	;; condjump to .L120 occurs
		SLDDW		*+AR15[5], R53:R52
	|	SMVAAGL.M1		OR8, R17:R16
	|	SMVAAGL.M2		AR8, R19:R18
	|	SMOVIL.L		trival_qr, R10
		SLDDW		*+AR15[6], R55:R54
	|	SMVAAGL.M1		AR14, R21:R20
	|	SMVAAGL.M2		OR9, R27:R26
	|	SMOVIL.L		DSPF_sp_qrd_solver4, R12
		SLDDW		*+AR15[4], R33:R32
	|	SMVAAGL.M1		AR9, R29:R28
	|	SMVAAGH.M2		OR8, R17:R16
	|	SMOVIL.L		trival_inverse, R14
		SMVAAGH.M1		AR8, R19:R18
	|	SMVAAGH.M2		AR14, R21:R20
	|	SMOVIH.L		trival_qr, R10
		SMVAAGH.M1		OR9, R27:R26
	|	SMVAAGH.M2		AR9, R29:R28
	|	SMOVIH4.L		trival_qr, R11
		SMOVIH.L		DSPF_sp_qrd_solver4, R12
		SMOVIH4.L		DSPF_sp_qrd_solver4, R13
		SMOVIH.L		trival_inverse, R14
		SBR		testQr
	|	SSTDW		R53:R52, *+AR15[2]
	|	SMOVIH4.L		trival_inverse, R15
		SSTDW		R55:R54, *+AR15[3]
	|	SMOVIL		.L177, R62
		SMOVIH		.L177, R62
		SMOVIH4.L		.L177, R63
		SSTDW		R33:R32, *+AR15[1]
	|	SMOVIL		16, R22
		SMOVIL		16, R24
	;; call to testQr occurs
		SNOP		1
.L177:
		SBR		srand
	|	SMOVIL		0, R10
		SMOVIL		.L178, R62
		SMOVIH		.L178, R62
		SMOVIH4.L		.L178, R63
	;; call to srand occurs
		SNOP		3
.L178:
.L123:
		SMOVIL		64, R33
		SADD.M2		R33,R30,R37
		SLTU		R37, R30, R55
		SADD.M2		R31,R55,R36
.L124:
		SBR		rand
		SMOVIL		.L179, R62
		SMOVIH		.L179, R62
		SMOVIH4.L		.L179, R63
	;; call to rand occurs, with return value
		SNOP		3
.L179:
		SADD.M1		4,R30,R57
	|	SFINTS32.M2		R10,R56
		SLTU		R57, R30, R58
	|	SMOV.M2		R57, R30
		SADD.M1		R31,R58,R31
	|	SEQ		R57, R37, R2
	[R2]	SEQ		R31, R36, R2
	|	SFMULS32.M2		R56, R38, R60
	|	SMVAGA36.M1		R31:R30, AR10
	[!R2]	SBR		.L124
		SNOP		2
		SSTW		R60, *AR10
		SNOP		3
	;; condjump to .L124 occurs
		SBR		rand
		SMOVIL		.L180, R62
		SMOVIH		.L180, R62
		SMOVIH4.L		.L180, R63
	;; call to rand occurs, with return value
		SNOP		3
.L180:
		SLDW		*+AR15[16], R8
	|	SEQ		R37, R39, R0
	|	SFINTS32.M2		R10,R61
	|	SADD.M1		4,R34,R42
		SMOVIL		973082626, R10
		SMOVIH		973082626, R10
		SLTU		R42, R34, R44
	|	SFMULS32.M2		R61, R10, R9
	|	SMOV.M1		R42, R34
		SADD.M1		R35,R44,R35
		SMVAGA36.M1		R35:R34, AR10
	[R0]	SEQ		R36, R8, R0
	[!R0]	SBR		.L123
	|	SSTW		R9, *AR10
		SNOP		6
	;; condjump to .L123 occurs
		SLDDW		*+AR15[4], R31:R30
	|	SMVAAGL.M1		OR8, R17:R16
	|	SMVAAGL.M2		AR14, R21:R20
	|	SMOVIL.L		trival_qr, R10
		SLDDW		*+AR15[6], R19:R18
	|	SMVAAGL.M1		OR9, R27:R26
	|	SMVAAGL.M2		AR9, R29:R28
	|	SMOVIL.L		trival_inverse, R14
		SLDDW		*+AR15[5], R13:R12
	|	SMVAAGH.M1		OR8, R17:R16
	|	SMVAAGH.M2		AR14, R21:R20
	|	SMOVIH.L		trival_qr, R10
		SMVAAGH.M1		OR9, R27:R26
	|	SMVAAGH.M2		AR9, R29:R28
	|	SMOVIH4.L		trival_qr, R11
		SMOVIH.L		trival_inverse, R14
		SMOVIH4.L		trival_inverse, R15
		SMOVIL		16, R22
		SMOVIL		16, R24
		SSTDW		R31:R30, *+AR15[1]
		SLDW		*+AR15[17], R31
		SNOP		1
		SBR		testQr
	|	SSTDW		R19:R18, *+AR15[3]
	|	SMVAAGL.M2		AR8, R19:R18
		SMOVIL		.L181, R62
		SMVAAGH.M2		AR8, R19:R18
	|	SMOVIH		.L181, R62
		SMOVIH4.L		.L181, R63
		SSTDW		R13:R12, *+AR15[2]
	|	SMOVIH4.L		DSPF_sp_qrd_solver5, R13
	|	SADD.M2		1,R31,R34
		SSTW		R34, *+AR15[17]
	|	SMOVIL.L		DSPF_sp_qrd_solver5, R12
	;; call to testQr occurs
		SMOVIH.L		DSPF_sp_qrd_solver5, R12
.L181:
		SMOVIL		3, R43
		SLDW		*+AR15[17], R35
		SNOP		5
		SEQ		R43, R35, R1
	[!R1]	SBR		.L109
		SNOP		6
	;; condjump to .L109 occurs
		SLDDW		*+AR15[17], R7:R6
		SLDDW		*+AR15[21], R63:R62
		SLDDW		*+AR15[11], R31:R30
		SLDDW		*+AR15[12], R33:R32
		SLDDW		*+AR15[13], R35:R34
		SNOP		1
		SMVAGA36.M2		R7:R6, AR8
		SMVCGC.L		R63, BRReg
		SNOP		2
		SLDDW		*+AR15[18], R7:R6
		SLDDW		*+AR15[14], R37:R36
		SLDDW		*+AR15[15], R39:R38
		SLDDW		*+AR15[16], R41:R40
		SNOP		2
		SMVAGA36.M2		R7:R6, AR9
		SNOP		2
		SLDDW		*+AR15[19], R7:R6
		SNOP		5
		SMVAGA36.M2		R7:R6, OR8
	|	SLDDW		*+AR15[20], R7:R6
		SNOP		5
		SMVAGA36.M2		R7:R6, OR9
	|	SLDDW		*+AR15[22], R7:R6
		SNOP		2
		SBR		R62
		SNOP		2
		SMVAGA36.M2		R7:R6, AR14
	|	SMOVIL		184, R6
		SMOVIL		0, R7
		SADDA.M2		R7:R6,AR15,AR15
		SNOP		1
	;; return occurs
	.size	main, .-main
